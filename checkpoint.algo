ALGORITHM Checkpoint-p1-solution1

VAR
i,j,output:NUMBNER;
test:BOOLEAN;
set1,set2:ARRAY_OF NUMBER ();

BEGIN 
FOR i FROM 0 TO set1.lenght-1 STEP 1 DO
    test:=FALSE; 
    FOR j FROM 0 TO set2.length-1 STEP 1 DO
            IF (set1[i]==set2[j]) THEN 
            test:=TRUE; 
            break;
            END_IF
     END_FOR
    IF (test==FALSE) THEN
    output+=set1[i] ;
    END_IF
END_FOR        

FOR j FROM 0 TO set2.length-1 STEP 1 DO
    test:=FALSE; 
    FOR i FROM 0 TO set1.lenght-1 STEP 1 DO
            IF (set2[j]==set1[i]) THEN 
            test:=TRUE; 
            break;
            END_IF
     END_FOR
    IF (test==FALSE) THEN
    output+=set1[j] ;
    END_IF
END_FOR     
WRITE(output)
END




ALGORITHM Checkpoint-p1-solution2 //Hash Table

VAR
i,j,output:NUMBNER;
set1,set2:ARRAY_OF NUMBER ();
htab : HASH_TABLE<INTEGER,INTEGER>;

BEGIN

 FOR i FROM 0 TO set1.length -1 STEP 1  DO
   IF (htab.lookup(set1[i]) = TRUE) THEN
           count := htab.get(set1[i]);
           htab.insert(set1[i],count+1);
       ELSE
           htab.insert(set1[i],1);
       END_IF
   END_FOR
   
   FOR j FROM 0 TO set2.length -1 STEP 1  DO
   IF (htab.lookup(set2[j]) = TRUE) THEN
           count := htab.get(set2[j]);
           htab.insert(set2[j],count+1);
       ELSE
           htab.insert(set2[j],1);
       END_IF
    END_FOR
    
    FOR i FROM 0 TO set1.length -1 STEP 1  DO
       IF (htab.get(set1[i]) = 1) THEN
           output +=set1[i];
          END_IF
    END_FOR
    FOR j FROM 0 TO set2.length -1 STEP 1  DO
       IF (htab.get(set2[j]) = 1) THEN
           output +=set1[j];
          END_IF
    END_FOR

   WRITE(output);

END

ALGORITHM Checkpoint-p2-solution1

VAR
i,j,output:NUMBNER;
test:BOOLEAN;
set1,set2:ARRAY_OF NUMBER ();

BEGIN 
FOR i FROM 0 TO set1.lenght-1 STEP 1 DO
    test:=FALSE; 
    FOR j FROM 0 TO set2.length-1 STEP 1 DO
            IF (set1[i]==set2[j]) THEN 
            test:=TRUE; 
            break ;
             END_IF
     END_FOR
    IF (test==TRUE) THEN
    output+=(set1[i]*2) ;
    END_IF
END_FOR 
 WRITE(output)
END       


ALGORITHM Checkpoint-p2-solution2 //Hash Table

VAR
i,j,output:NUMBNER;
set1,set2:ARRAY_OF NUMBER ();
htab : HASH_TABLE<INTEGER,INTEGER>; 
BEGIN

 FOR i FROM 0 TO set1.length -1 STEP 1  DO
   IF (htab.lookup(set1[i]) = TRUE) THEN
           count := htab.get(set1[i]);
           htab.insert(set1[i],count+1);
       ELSE
           htab.insert(set1[i],1);
       END_IF
   END_FOR
   
   FOR j FROM 0 TO set2.length -1 STEP 1  DO
   IF (htab.lookup(set2[j]) = TRUE) THEN
           count := htab.get(set2[j]);
           htab.insert(set2[j],count+1);
       ELSE
           htab.insert(set2[j],1);
       END_IF
    END_FOR
    
    FOR i FROM 0 TO set1.length -1 STEP 1  DO
       IF (htab.get(set1[i]) = 2) THEN
           output +=(set1[i]*2);
          END_IF
    END_FOR
    
   WRITE(output);
   END